#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<Windows.h>
#include<time.h>
#include<conio.h>
#include <stdlib.h>

main() {
	int key, ch = 0, sc = 0, ct = 0;
	int x = 0, y = 0, di = 4, ran[2];
	int size = 10;
	int map[10][10];
	int i, j, p, sx[100], sy[100];

	srand(time(NULL));
	ran[0] = rand() % size;
	ran[1] = rand() % size;

	for (i = 0; i < 100; i++) {
		sx[i] = 0;
		sy[i] = 0;
	}
	for (i = 0; i < size; i++) {
		for (j = 0; j < size; j++) {
			map[i][j] = 0;
		}
	}

	while (1) {
		Sleep(350);
		system("cls");
		if (_kbhit()) {
			key = _getch();
			if (key == 224 || key == 0) {
				key = _getch();
				switch (key) {
				case 72:
					if (di != 4) {
						di = 1;
					}
					break;
				case 75:
					if (di != 3) {
						di = 2;
					}
					break;
				case 77:
					if (di != 2) {
						di = 3;
					}
					break;
				case 80:
					if (di != 1) {
						di = 4;
					}
					break;

				default:
					break;
				}
			}
		}
		for (i = 0; i < size; i++) {
			for (j = 0; j < size; j++) {
				if (map[i][j] == 1 && i == y && j == x) {
					system("cls");
					printf("□□■■■□□□■■■□□■□□□■□■■■■□\n");
					printf("□■□□□□□■□□□■□■■□■■□■□□□□\n");
					printf("□■□□■■□■■■■■□■□■□■□■■■■□\n");
					printf("□■□□□■□■□□□■□■□□□■□■□□□□\n");
					printf("□□■■■□□■□□□■□■□□□■□■■■■□\n");
					printf("□□□□□□□□□□□□□□□□□□□□□□□□\n");
					printf("□□■■■□□■□□□■□■■■■□■■■■□□\n");
					printf("□■□□□■□■□□□■□■□□□□■□□□■□\n");
					printf("□■□□□■□■□□□■□■■■■□■■■■■□\n");
					printf("□■□□□■□□■□■□□■□□□□■□□■□□\n");
					printf("□□■■■□□□□■□□□■■■■□■□□□■□\n");
					printf("\nScore: %d", sc);
					return 0;
				}
			}
		}
		if (y >= size || x >= size || y < 0 || x < 0) {
			system("cls");
			printf("□□■■■□□□■■■□□■□□□■□■■■■□\n");
			printf("□■□□□□□■□□□■□■■□■■□■□□□□\n");
			printf("□■□□■■□■■■■■□■□■□■□■■■■□\n");
			printf("□■□□□■□■□□□■□■□□□■□■□□□□\n");
			printf("□□■■■□□■□□□■□■□□□■□■■■■□\n");
			printf("□□□□□□□□□□□□□□□□□□□□□□□□\n");
			printf("□□■■■□□■□□□■□■■■■□■■■■□□\n");
			printf("□■□□□■□■□□□■□■□□□□■□□□■□\n");
			printf("□■□□□■□■□□□■□■■■■□■■■■■□\n");
			printf("□■□□□■□□■□■□□■□□□□■□□■□□\n");
			printf("□□■■■□□□□■□□□■■■■□■□□□■□\n");
			printf("\nScore: %d", sc);
			return 0;
		}
		if (y == ran[0] && x == ran[1]) {
			ran[0] = rand() % size;
			ran[1] = rand() % size;
			sc += 1;
		}

		map[ran[0]][ran[1]] = 2;
		for (i = 0; i < size; i++) {
			map[sy[ct]][sx[ct]] = 0;
			sx[ct] = x;
			sy[ct] = y;
			map[y][x] = 1;
			for (p = 0; p < size; p++) {
				if (map[i][p] >= 1) {
					ch = 1;
				}
			}
			if (ch == 1) {
				for (j = 0; j < size; j++) {
					if (map[i][j] == 0) {
						printf("□");
					}
					else if (map[i][j] == 1) {
						printf("■");
					}
					else if (map[i][j] == 2) {
						printf("▣");
					}
				}
			}
			else {
				printf("□□□□□□□□□□");
			}
			ch = 0;
			printf("\n");
		}
		printf("\nScore: %d", sc);
		if (di == 1) {
			y--;
		}
		else if (di == 2) {
			x--;
		}
		else if (di == 3) {
			x++;
		}
		else if (di == 4) {
			y++;
		}
		ct++;
		if (ct > 2 + (sc * 2)) {
			ct = 0;
		}
	}
}